
// persistable settings:
namespace Settings
{
  const path = System.path(#USER_APPDATA, "sciter-inspector-settings.json");
  var   list = []; // list of persistable objects

  function store() 
  {
    var stream = Stream.openFile(path,"uw");
  
    if( !stream )
    {
      view.msgbox(#warning, "Cannot open file "+ path +" for writing. Settings will not be saved." );
      return;
    }
  
    var data = {};
    for(var persistable in list)
      persistable.store(data);

    stream.printf("%V\n",data);
    //stdout.printf("%V\n",data);
    stream.close();
    //stdout.printf("saving to:%s\n",path);
  }

  function restore() 
  {
    //stdout.printf("restoring from:%s\n",path);
    var stream = Stream.openFile(path,"ur");
    if( !stream )
      return false;
    var data = null;
    try      { data = parseData( stream ); }
    catch(e) { stdout.printf("Restore error %s\n",e); }
    finally { stream.close(); }
    if(data) for(var persistable in list)
                persistable.restore(data);
  }

  function add(persistable) { list.push(persistable); }
}

// window position persistence
Settings.add {
  store: function(data) 
    {
       var (x,y,w,h) = view.box(#rectw,#border,#screen);
       data.window = {left:x,top:y,width:w,height:h};  
    },
  restore: function(data) 
    {
       if( data.window )
         view.move(
           Integer.max(data.window.left,0),
           Integer.max(data.window.top,0),
           Integer.max(data.window.width,400),
           Integer.max(data.window.height,400)); 
    }
};
  
function saveState()
{
  self.timer(4s,Settings.store);
}

view.on("move",saveState)
    .on("size",saveState);


